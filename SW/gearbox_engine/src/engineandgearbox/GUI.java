/*
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package engineandgearbox;

import java.awt.Color;
import java.util.Timer;
import java.util.TimerTask;

/**
 *
 * @author Patrik
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelRPM = new javax.swing.JLabel();
        labelTorque = new javax.swing.JLabel();
        labelGearState = new javax.swing.JLabel();
        buttonThrottle = new javax.swing.JButton();
        buttonGearLeverToD = new javax.swing.JButton();
        buttonGearLeverToN = new javax.swing.JButton();
        buttonGearLeverToR = new javax.swing.JButton();
        buttonStart = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelRPM.setText("Engine RPM: 0");
        labelRPM.setName("labelRPM"); // NOI18N
        labelRPM.setRequestFocusEnabled(false);

        labelTorque.setText("Torque: 0");

        labelGearState.setText("Gear: N");

        buttonThrottle.setBackground(new java.awt.Color(0, 255, 0));
        buttonThrottle.setText("Throttle");
        buttonThrottle.setActionCommand("");
        buttonThrottle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonThrottleActionPerformed(evt);
            }
        });

        buttonGearLeverToD.setLabel("Gear Lever To D");
        buttonGearLeverToD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGearLeverToDActionPerformed(evt);
            }
        });

        buttonGearLeverToN.setEnabled(false);
        buttonGearLeverToN.setLabel("Gear Lever To N");
        buttonGearLeverToN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGearLeverToNActionPerformed(evt);
            }
        });

        buttonGearLeverToR.setLabel("Gear Lever To R");
        buttonGearLeverToR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGearLeverToRActionPerformed(evt);
            }
        });

        buttonStart.setText("Start");
        buttonStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonStartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelRPM)
                    .addComponent(labelTorque)
                    .addComponent(labelGearState))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonStart)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonThrottle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonGearLeverToD)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonGearLeverToN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonGearLeverToR)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelRPM)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelTorque)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelGearState)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonThrottle)
                    .addComponent(buttonGearLeverToD)
                    .addComponent(buttonGearLeverToN)
                    .addComponent(buttonGearLeverToR))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonStart)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        labelGearState.getAccessibleContext().setAccessibleName("labelGearLever");
        buttonThrottle.getAccessibleContext().setAccessibleName("buttonThrottle");
        buttonGearLeverToD.getAccessibleContext().setAccessibleName("buttonGearLeverToD");
        buttonGearLeverToN.getAccessibleContext().setAccessibleName("buttonGearLeverToN");
        buttonGearLeverToR.getAccessibleContext().setAccessibleName("buttonGearLeverToR");
        buttonStart.getAccessibleContext().setAccessibleName("buttonStart");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void buttonThrottleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonThrottleActionPerformed
        gas = !gas;
        if (!gas) {
            this.buttonThrottle.setBackground(Color.red);
        } else {
            this.buttonThrottle.setBackground(Color.green);
        }
    }//GEN-LAST:event_buttonThrottleActionPerformed
    private void buttonGearLeverToRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGearLeverToRActionPerformed
        gearLever = -1;
        this.buttonGearLeverToD.setEnabled(false);
        this.buttonGearLeverToN.setEnabled(true);
        this.buttonGearLeverToR.setEnabled(false);
    }//GEN-LAST:event_buttonGearLeverToRActionPerformed
    private void buttonGearLeverToDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGearLeverToDActionPerformed
        gearLever = 1;
        this.buttonGearLeverToR.setEnabled(false);
        this.buttonGearLeverToN.setEnabled(true);
        this.buttonGearLeverToD.setEnabled(false);
    }//GEN-LAST:event_buttonGearLeverToDActionPerformed
    private void buttonGearLeverToNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGearLeverToNActionPerformed
        gearLever = 0;
        this.buttonGearLeverToD.setEnabled(true);
        this.buttonGearLeverToR.setEnabled(true);
        this.buttonGearLeverToN.setEnabled(false);
    }//GEN-LAST:event_buttonGearLeverToNActionPerformed

    private void buttonStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonStartActionPerformed
        // TODO add your handling code here:
        canvasForm = new CanvasForm();
        canvasForm.show();
        timer = new Timer();
        timer.scheduleAtFixedRate(new TimerTask() {
            @Override
            public void run() {
                modifyLabels();
                gb.operateGearbox(gearLever, eg.getRpm());
                eg.operateEngine(gb.getStage(), gas);
            }
        }, 100, 100);
    }//GEN-LAST:event_buttonStartActionPerformed
    public void modifyLabels() {
        this.labelRPM.setText("Engine RPM: " + (int)eg.getRpm());
        this.labelTorque.setText("Torque: " + (int)eg.getTorque() + " Nm");
        this.labelGearState.setText("Gear:" + gb.getStage());
         canvasForm.jPanel2.Rajzol(canvasForm.getGraphics(),eg.getRpm(),eg.getTorque());
        
    }
    public boolean gas = true;
    public int gearLever = 0;
    public Gearbox gb = new Gearbox(gearLever);
    public Engine eg = new Engine(gb.getStage());
    public Timer timer;
    public CanvasForm canvasForm;

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonGearLeverToD;
    private javax.swing.JButton buttonGearLeverToN;
    private javax.swing.JButton buttonGearLeverToR;
    private javax.swing.JButton buttonStart;
    private javax.swing.JButton buttonThrottle;
    private javax.swing.JLabel labelGearState;
    private javax.swing.JLabel labelRPM;
    private javax.swing.JLabel labelTorque;
    // End of variables declaration//GEN-END:variables
}
